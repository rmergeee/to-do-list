(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},s=[],i=0;i<n.length;i++){var c=n[i],d=o.base?c[0]+o.base:c[0],l=r[d]||0,A="".concat(d," ").concat(l);r[d]=l+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=a(p,o);o.byIndex=i,e.splice(i,0,{identifier:A,updater:m,references:1})}s.push(A)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<r.length;s++){var i=t(r[s]);e[i].references--}for(var c=o(n,a),d=0;d<r.length;d++){var l=t(r[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=c}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},208:(n,e,t)=>{t.d(e,{A:()=>i});var o=t(354),a=t.n(o),r=t(314),s=t.n(r)()(a());s.push([n.id,"@import url(https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css);"]),s.push([n.id,"main {\n    width: 100vw;\n    min-height: 100vh;\n    display: flex;\n}\n\n.nav-menu {\n    display: flex;\n    flex-direction: column;\n    min-width: 360px;\n    max-width: 400px;\n    padding: 2rem;\n    justify-content: start;\n\n    h1 {\n        align-self: center;\n    }\n\n    .menuList {\n        display: flex;\n        flex-direction: column;\n        align-items: start;\n\n        li {\n            a {\n                display: flex;\n                align-items: center;\n                gap: 1rem;\n                justify-content: start;\n\n                img {\n                    width: 1.5rem;\n                }\n            }\n        }\n    }\n\n    .projectList {\n        display: flex;\n        justify-content: center;\n    }\n}\n\n.line {\n    background-color: #969ea6;\n    width: 1px;\n    flex: 0 0 1;\n}\n\ndialog {\n    form {\n        article {\n            footer {\n                display: flex;\n                align-items: center;\n                gap: 1rem;\n                #comfirmBtn {\n                    margin: 0;\n                }\n            }\n        }\n    }\n}\n\n.invalid {\n    border: 2px solid red;\n}\n\n.content {\n    flex: 1;\n    padding: 2rem;\n    overflow-x: hidden;\n    max-width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n    .task {\n        border-radius: 10px;\n        padding: 1rem;\n        max-width: 100%;\n        box-sizing: border-box;\n\n        .taskDesc {\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n    }\n}\n\n@media (max-width: 768px) {\n    main {\n        flex-direction: column;\n    }\n\n    .nav-menu {\n        max-width: 100%;\n        border-bottom: 1px solid #ccc;\n    }\n\n    .line {\n        display: none;\n    }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,sBAAsB;;IAEtB;QACI,kBAAkB;IACtB;;IAEA;QACI,aAAa;QACb,sBAAsB;QACtB,kBAAkB;;QAElB;YACI;gBACI,aAAa;gBACb,mBAAmB;gBACnB,SAAS;gBACT,sBAAsB;;gBAEtB;oBACI,aAAa;gBACjB;YACJ;QACJ;IACJ;;IAEA;QACI,aAAa;QACb,uBAAuB;IAC3B;AACJ;;AAEA;IACI,yBAAyB;IACzB,UAAU;IACV,WAAW;AACf;;AAEA;IACI;QACI;YACI;gBACI,aAAa;gBACb,mBAAmB;gBACnB,SAAS;gBACT;oBACI,SAAS;gBACb;YACJ;QACJ;IACJ;AACJ;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,OAAO;IACP,aAAa;IACb,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET;QACI,mBAAmB;QACnB,aAAa;QACb,eAAe;QACf,sBAAsB;;QAEtB;YACI,gBAAgB;YAChB,uBAAuB;YACvB,mBAAmB;QACvB;IACJ;AACJ;;AAEA;IACI;QACI,sBAAsB;IAC1B;;IAEA;QACI,eAAe;QACf,6BAA6B;IACjC;;IAEA;QACI,aAAa;IACjB;AACJ",sourcesContent:['@import url("https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css");\n\nmain {\n    width: 100vw;\n    min-height: 100vh;\n    display: flex;\n}\n\n.nav-menu {\n    display: flex;\n    flex-direction: column;\n    min-width: 360px;\n    max-width: 400px;\n    padding: 2rem;\n    justify-content: start;\n\n    h1 {\n        align-self: center;\n    }\n\n    .menuList {\n        display: flex;\n        flex-direction: column;\n        align-items: start;\n\n        li {\n            a {\n                display: flex;\n                align-items: center;\n                gap: 1rem;\n                justify-content: start;\n\n                img {\n                    width: 1.5rem;\n                }\n            }\n        }\n    }\n\n    .projectList {\n        display: flex;\n        justify-content: center;\n    }\n}\n\n.line {\n    background-color: #969ea6;\n    width: 1px;\n    flex: 0 0 1;\n}\n\ndialog {\n    form {\n        article {\n            footer {\n                display: flex;\n                align-items: center;\n                gap: 1rem;\n                #comfirmBtn {\n                    margin: 0;\n                }\n            }\n        }\n    }\n}\n\n.invalid {\n    border: 2px solid red;\n}\n\n.content {\n    flex: 1;\n    padding: 2rem;\n    overflow-x: hidden;\n    max-width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n    .task {\n        border-radius: 10px;\n        padding: 1rem;\n        max-width: 100%;\n        box-sizing: border-box;\n\n        .taskDesc {\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n    }\n}\n\n@media (max-width: 768px) {\n    main {\n        flex-direction: column;\n    }\n\n    .nav-menu {\n        max-width: 100%;\n        border-bottom: 1px solid #ccc;\n    }\n\n    .line {\n        display: none;\n    }\n}\n'],sourceRoot:""}]);const i=s},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t}).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&s[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o=t(72),a=t.n(o),r=t(825),s=t.n(r),i=t(659),c=t.n(i),d=t(56),l=t.n(d),A=t(540),u=t.n(A),p=t(113),m=t.n(p),f=t(208),g={};g.styleTagTransform=m(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=u(),a()(f.A,g),f.A&&f.A.locals&&f.A.locals;const h={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let B;const v=new Uint8Array(16),y=[];for(let n=0;n<256;++n)y.push((n+256).toString(16).slice(1));function I(n,e,t){const o=(n=n||{}).random??n.rng?.()??function(){if(!B){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");B=crypto.getRandomValues.bind(crypto)}return B(v)}();if(o.length<16)throw new Error("Random bytes length must be >= 16");if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,e){if((t=t||0)<0||t+16>e.length)throw new RangeError(`UUID byte range ${t}:${t+15} is out of buffer bounds`);for(let n=0;n<16;++n)e[t+n]=o[n];return e}return function(n,e=0){return(y[n[e+0]]+y[n[e+1]]+y[n[e+2]]+y[n[e+3]]+"-"+y[n[e+4]]+y[n[e+5]]+"-"+y[n[e+6]]+y[n[e+7]]+"-"+y[n[e+8]]+y[n[e+9]]+"-"+y[n[e+10]]+y[n[e+11]]+y[n[e+12]]+y[n[e+13]]+y[n[e+14]]+y[n[e+15]]).toLowerCase()}(o)}class C{constructor(n,e,t,o=null){this.id=function(n,e,t){return!h.randomUUID||e||n?I(n,e,t):h.randomUUID()}(),this.title=n,this.description=e,this.deadline=t,this.status=!0,this.project=o}}class x{constructor(){this.taskStorage=[]}addTask(n,e,t,o){this.taskStorage.push(new C(n,e,t,o))}changeStatus(n){const e=this.taskStorage.find(e=>e.id===n);e.status=!e.status}}class k{getAllTasks(){throw new Error("Not implemented")}getAllTasksToVirtualStorage(){throw new Error("Not implemented")}getTaskById(){throw new Error("Not implemented")}deleteTaskById(){throw new Error("Not implemented")}setTaskById(){throw new Error("Not implemented")}}class b extends k{constructor(n){super(),this.objToDo=n}getAllTasksToVirtualStorage(){this.objToDo.taskStorage=[];for(let n=0;n<localStorage.length;n++){const e=localStorage.key(n),t=localStorage.getItem(e);try{this.objToDo.taskStorage.push(JSON.parse(t))}catch(n){console.error(`Помилка при парсингу ключа ${e}:`,n)}}}addAllTask(){this.objToDo.taskStorage.forEach(n=>{localStorage.setItem(n.id,JSON.stringify(n))})}getTaskById(n){return JSON.parse(localStorage.getItem(n))}deleteTaskById(){throw new Error("Not implemented")}setTaskById(n,e){localStorage.setItem(n,JSON.stringify(e))}}(new class{constructor(){this.todo=new x,this.storage=new b(this.todo)}addEvent(){const n=document.getElementById("createBtn"),e=document.querySelector("dialog"),t=document.getElementById("closeModal"),o=document.querySelector("form"),a=document.getElementById("completedTasks"),r=document.getElementById("todoTasks");o.addEventListener("submit",n=>{n.preventDefault();let e=!0;const a=new FormData(o);o.querySelectorAll("input, textarea, select").forEach(n=>{n.value?n.classList.remove("invalid"):(n.classList.add("invalid"),e=!1)}),e&&(console.log("Форма валідна, можна сабмітити через JS"),this.todo.addTask(a.get("taskName"),a.get("taskDesc"),a.get("date"),a.get("taskProject")),this.storage.addAllTask(),this.uploadTaskToPage(!0),o.reset(),t.click(),console.table(this.todo.taskStorage))}),n.addEventListener("click",()=>{e.showModal()}),t.addEventListener("click",()=>{e.close()}),a.addEventListener("click",n=>{n.preventDefault(),this.uploadTaskToPage(!1)}),r.addEventListener("click",n=>{n.preventDefault(),this.uploadTaskToPage(!0)})}uploadTaskToPage(n){document.getElementById("task-container").innerHTML="";const e=this;this.storage.getAllTasksToVirtualStorage(),this.todo.taskStorage.forEach(t=>{if(t.status===n){let n=document.createElement("article");n.innerHTML=`<input type="checkbox" name="taskStatus" id="${t.id}" ${!1===t.status?"checked":""}/>\n        <label>\n            <h3 class="taskHeader">${t.title}</h3>\n        </label>\n        <div class="taskTextContent">\n            <p class="taskDesc">${t.description}</p>\n        </div>`,n.className="task",document.getElementById("task-container").append(n),document.getElementById(t.id).addEventListener("change",function(){this.checked?(t.status=!1,console.log("Checkbox is checked!")):(t.status=!0,console.log("Checkbox is unchecked!")),!1===t.status&&document.getElementById(t.id).parentElement.remove(),e.storage.setTaskById(t.id,t)})}})}init(){this.uploadTaskToPage(!0),this.addEvent()}}).init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,